----------------------------------------------------------food ordering-----------------------------------------------------------------

 1). Database creation :-
 	 CREATE DATABASE food_ordering
 	 
 2). menu_items table created :-
 
 	 CREATE TABLE menu_items (
	  id BIGSERIAL PRIMARY KEY,
	  restaurant_id integer,
	  menu_category_id integer,
	  name varchar(50),
	  price integer,
	  Description varchar(100),
	  veg boolean
	);
	
 3). customers table creation :- 
 
 	CREATE TABLE customers (
	  id BIGSERIAL PRIMARY KEY,
	  First_name varchar(20),
	  Last_name varchar(20),
	  Email varchar(100),
	  Phone varchar,
	  Username varchar(50),
	  Password varchar(50),
	  Address_id integer,
	  dob Date,
	  Created_at timestamptz,
	  gender varchar
	);
	
 4). orders table creation :-
 
 	CREATE TABLE orders (
	  id BIGSERIAL PRIMARY KEY,
	  Customer_id integer,
	  restaurant_id integer,
	  customer_address_id integer,
	  amount integer,
	  Created_at timestamp,
	  status_id integer,
	  rider_id integer
	);
	
 5). order_details table creation :-
 
 	CREATE TABLE order_details (
	  id BIGSERIAL PRIMARY KEY,
	  Order_id integer,
	  menu_item_id integer,
	  quantity integer,
	  item_price integer,
	  total_price integer
	);
	
 6). payments table creation :-
 
 	CREATE TABLE payments (
	  id BIGSERIAL PRIMARY KEY,
	  Order_id integer,
	  date Date
	);
	
 7). ratings table creation :-
 
 	CREATE TYPE score AS ENUM (          #user define data type for scale attribute
	  '1',
	  '2',
	  '3',
	  '4',
	  '5'
	);
	
	
	CREATE TABLE ratings (               #rating table 
	  id BIGSERIAL PRIMARY KEY,
	  Scale score,
	  comment varchar(200),
	  rating_for_id integer,
	  date Date,
	  Customer_id integer
	);

 8). cart_items table creation :-
 
 	CREATE TABLE cart_items (
	  id BIGSERIAL PRIMARY KEY,
	  Customer_id integer,
	  menu_item_id integer,
	  Created_at Date,
	  Updated_at Date
	);
	
	
	
	
	
	
	
