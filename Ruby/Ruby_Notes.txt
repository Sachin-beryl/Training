------------------------------------------------------------INTRODUCTION-----------------------------------------------------------------

 1). Ruby is a scripting language designed by Yukihiro Matsumoto, also known as Matz.
 2). It runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX.
 3). Ruby is a pure object-oriented programming language.
 4). Ruby is a general-purpose, interpreted programming language.
 5). Ruby is a server-side scripting language similar to Python and PERL.
 6). Ruby can be used to write Common Gateway Interface (CGI) scripts.
 CGI -> a simple protocol for passing an HTTP request from a web server to a standalone program, and returning the output to the web browser
 
 7). Ruby can be embedded into Hypertext Markup Language (HTML).

------------------------------------------------------------Ruby Installation------------------------------------------------------------

 1). Update the system repositories with:
	sudo apt update

 2). Use the following command to install Ruby:
	sudo apt install ruby-full
	
 3). Type 'y' in terminal to give permission to download and install ruby.
 
                                    ----------IF ALREADY PRESENT UPDATE THE VERSION OF RUBY----------
                      
                a). check version on rvm(ruby version manager) in terminal.
                	rvm -v
                	
                b). list the version of ruby using rvm.
                	rvm list known
                	
                c). Now install the latest version of ruby.
                	rvm install 3.2.1(version number)
                	
                d). check for ruby version.
                	ruby -v
                	

------------------------------------------------------------PLATFORMS TO RUN RUBY--------------------------------------------------------

 1). VIM (Vi IMproved) is a very simple text editor.
 
 2). Interactive Ruby (IRb) :- 
 	a). Interactive Ruby (IRb) provides a shell for experimentation. Within the IRb shell, you can immediately view expression results, line by line.
 	b). Just type irb at your command prompt and an Interactive Ruby Session will start.
 		
 		eg:- beryl@beryl-HP-Pavilion-Notebook:~$ irb
			3.2.1 :001 > puts "sachin"
			sachin
			 => nil                                      
			3.2.1 :003 >   out = "Hello"
			3.2.1 :004 >   puts out
			3.2.1 :005 > end
			 => :hello 
	
	c). Exit the ruby terminal type "quit".
	
 3). VScode :- install vscode , install extensions in vscode related to ruby.
 
------------------------------------------------------------Ruby Syntax-----------------------------------------------------------------

 1). All ruby files will have extension .rb
 
 2). To print the output in ruby :-
 
 	a. puts "Hello, Ruby!";        # it will provide new line by default.
 	b. print "Hello, Ruby!";       # semicolon is not mendatory.
 	
 3). Whitespace in Ruby Program :-
 	-> Whitespace characters such as spaces and tabs are generally ignored in Ruby code, except when they appear in strings.
 	
 	eg :-   a + b is interpreted as a+b ( Here a is a local variable)
		a  +b is interpreted as a(+b) ( Here a is a method call)
		
 4). Ruby Identifiers :-
       -> Identifiers are names of variables, constants, and methods. Ruby identifiers are case sensitive. 
       -> It means Ram and RAM are two different identifiers in Ruby.
       
 5). Reserved Words :-
       -> The following list shows the reserved words in Ruby. These reserved words may not be used as constant or variable names. 
       -> They can, however, be used as method names.

	BEGIN		do	next	then
	END		else	nil	true
	alias		elsif	not	undef
	and		end	or	unless
	begin		ensure	redo	until
	break		false	rescue	when
	case		for	retry	while
	class		if	return	while
	def		in	self	__FILE__
	defined?	module	super	__LINE__
       
 6). Here Document in Ruby :-
 
	-> "Here Document" refers to build strings from multiple lines. 
	-> Following a << you can specify a string or an identifier to terminate the string literal, and all lines following the current line up to the terminator are the value of the string.

	-> If the terminator is quoted, the type of quotes determines the type of the line-oriented string literal. 
	-> Notice there must be no space between << and the terminator.
       
        eg :- a). print <<EOF
		   This is the first way of creating
		   here document ie. multiple line string.
		  EOF

	      b). print <<"EOF";                # same as above
		   This is the second way of creating
		   here document ie. multiple line string.
		  EOF

	      c). print <<`EOC`                 # execute commands
			echo hi there
			echo lo there
		  EOC

	      d). print <<"foo", <<"bar"  # you can stack them
			I said foo.
		  foo
			I said bar.
		  bar
		  
 7). Ruby BEGIN Statement :- Declares code to be called before the program is run.
	
	Syntax :- 
		BEGIN {
	   	   code
		}
	
	eg :- 
	code :-   puts "main code"
		  BEGIN{
		     puts "priority code"
		  }

	output :- priority code
		  main code

 8). Ruby END Statement :-
	Syntax :- 
		END {
		   code
		}
		
	eg :- 
	 code :- puts "main code"
		END{
		    puts "Always run at the end of code"
		}
		BEGIN{
		    puts "priority code"
		}
		
	output :- priority code
		  main code
		  Always run at the end of code
		  
 9). Ruby Comments :-
	-> A comment hides a line, part of a line, or several lines from the Ruby interpreter. 
	-> You can use the hash character (#) at the beginning of a line 

		eg :- # I am a comment. Just ignore me.
		
		   :- =begin
		      This is a comment.
		      This is a comment, too.
		      This is a comment, too.
		      I said that already.
		      =end
		



























