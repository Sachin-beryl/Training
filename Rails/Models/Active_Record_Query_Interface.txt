--------------------------------------------------- Active Record Query Interface --------------------------------------------------

 -> Active Record will perform queries on the database for you and is compatible with most database systems, including MySQL, MariaDB,
    PostgreSQL, and SQLite. Regardless of which database system you're using, the Active Record method format will always be the same.
    
 1). Retrieving Objects from the Database.
 -> To retrieve objects from the database, Active Record provides several finder methods. 
 -> Each finder method allows you to pass arguments into it to perform certain queries on your database without writing raw SQL.

     a). Retrieving a Single Object :-
	-> Active Record provides several different ways of retrieving a single object.
	
	*). find :- can retrieve the object corresponding to the specified primary key that matches any supplied options.
	
		eg:- 3.2.1 :001 > Book.find(1)           #find using id
                                 
			 id: 1,                                                     
			 name: "Harry potter",                                      
			 book_type: "fiction",                                      
			 created_at: Thu, 30 Mar 2023 08:49:06.338483000 UTC +00:00,
			 updated_at: Thu, 30 Mar 2023 08:49:06.338483000 UTC +00:00> 
			 
		     3.2.1 :002 > Book.find([1,3])      #find two books using id
						        
			  id: 1,                                                    
			  name: "Harry potter",                                     
			  book_type: "fiction",                                     
			  created_at: Thu, 30 Mar 2023 08:49:06.338483000 UTC +00:00,
			  updated_at: Thu, 30 Mar 2023 08:49:06.338483000 UTC +00:00>,
			
			  id: 3,
			  name: "And Then There Were None",
			  book_type: "Mystery",
			  created_at: Thu, 30 Mar 2023 08:54:11.346950000 UTC +00:00,
			  updated_at: Thu, 30 Mar 2023 08:54:11.346950000 UTC +00:00>] 
		
	*). take :- The take method retrieves a record without any implicit ordering.  # (bang version take!)
	 
	 	eg:-  3.2.1 :004 > Book.take                                
			 id: 1,                                                     
			 name: "Harry potter",                                      
			 book_type: "fiction",                                      
			 created_at: Thu, 30 Mar 2023 08:49:06.338483000 UTC +00:00,
			 updated_at: Thu, 30 Mar 2023 08:49:06.338483000 UTC +00:00> 
			 
		      3.2.1 :005 > Book.take(2)                              
			  id: 1,                                                    
			  name: "Harry potter",                                     
			  book_type: "fiction",                                     
			  created_at: Thu, 30 Mar 2023 08:49:06.338483000 UTC +00:00,
			  updated_at: Thu, 30 Mar 2023 08:49:06.338483000 UTC +00:00>,

			  id: 2,
			  name: "The Hobbit ",
			  book_type: "Fantasy",
			  created_at: Thu, 30 Mar 2023 08:54:11.342365000 UTC +00:00,
			  updated_at: Thu, 30 Mar 2023 08:54:11.342365000 UTC +00:00>] 
	
	*). first :- The first method finds the first record ordered by primary key (default).  # (bang version first!)
	
		eg:-  3.2.1 :007 > Author.first                                  
			 id: 1,                                                       
			 name: "JK Rowling",                                          
			 book_id: 1,                                                  
			 created_at: Thu, 30 Mar 2023 08:57:18.310960000 UTC +00:00,  
			 updated_at: Thu, 30 Mar 2023 08:57:18.310960000 UTC +00:00>  
			 
		      3.2.1 :008 > Author.first(2)                                
			  id: 1,                                                      
			  name: "JK Rowling",                                         
			  book_id: 1,                                                 
			  created_at: Thu, 30 Mar 2023 08:57:18.310960000 UTC +00:00,
			  updated_at: Thu, 30 Mar 2023 08:57:18.310960000 UTC +00:00>,
			 #<Author:0x00007fc7bb1f0470
			  id: 2,
			  name: "JRR Tolkien",
			  book_id: 2,
			  created_at: Thu, 30 Mar 2023 09:03:00.244777000 UTC +00:00,
			  updated_at: Thu, 30 Mar 2023 09:03:00.244777000 UTC +00:00>] 
	
	*). last :- The last method finds the last record ordered by primary key (default).  # (bang version last!)
	
		eg:-  3.2.1 :009 > Author.last                                 
			 id: 6,                                                       
			 name: "Charles Dickens",                                     
			 book_id: 3,                                                  
			 created_at: Thu, 30 Mar 2023 09:03:00.262260000 UTC +00:00,  
			 updated_at: Thu, 30 Mar 2023 09:03:00.262260000 UTC +00:00>  
			 
		      3.2.1 :010 > Author.last(2)                                 
			  id: 5,                                                      
			  name: "Charles Dickens",                                    
			  book_id: 5,                                                 
			  created_at: Thu, 30 Mar 2023 09:03:00.257843000 UTC +00:00, 
			  updated_at: Thu, 30 Mar 2023 09:03:00.257843000 UTC +00:00>,
						      
			  id: 6,                                                      
			  name: "Charles Dickens",                                    
			  book_id: 3,                                                 
			  created_at: Thu, 30 Mar 2023 09:03:00.262260000 UTC +00:00, 
			  updated_at: Thu, 30 Mar 2023 09:03:00.262260000 UTC +00:00>] 

		
	*). find_by :- The find_by method finds the first record matching some conditions.  # (bang version find_by!)
	
		eg:-  3.2.1 :012 > Publisher.find_by(name: "Pan Macmillan India")             
			 id: 5,                                                          
			 name: "Pan Macmillan India",                                    
			 book_id: 5,                                                     
			 created_at: Thu, 30 Mar 2023 10:22:22.766797000 UTC +00:00,     
			 updated_at: Thu, 30 Mar 2023 10:22:22.766797000 UTC +00:00>  
		
